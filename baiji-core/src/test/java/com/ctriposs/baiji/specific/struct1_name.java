/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.ctriposs.baiji.specific;

import com.ctriposs.baiji.exception.BaijiRuntimeException;
import com.ctriposs.baiji.schema.Schema;

public class struct1_name extends SpecificRecordBase {
  public static final Schema SCHEMA$ = Schema.parse("{\"type\":\"record\",\"name\":\"struct1_name\",\"namespace\":\"com.ctriposs.baiji.specific\",\"fields\":[{\"name\":\"sInt\",\"type\":\"int\"},{\"name\":\"sBoolean\",\"type\":\"boolean\"},{\"name\":\"sString\",\"type\":\"string\"}]}");
  public static Schema getClassSchema() { return SCHEMA$; }
  public int sInt;
  public boolean sBoolean;
  public CharSequence sString;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public struct1_name() {}

  /**
   * All-args constructor.
   */
  public struct1_name(Integer sInt, Boolean sBoolean, CharSequence sString) {
    this.sInt = sInt;
    this.sBoolean = sBoolean;
    this.sString = sString;
  }

  public Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public Object get(int field$) {
    switch (field$) {
    case 0: return sInt;
    case 1: return sBoolean;
    case 2: return sString;
    default: throw new BaijiRuntimeException("Bad index");
    }
  }

  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: sInt = (Integer)value$; break;
    case 1: sBoolean = (Boolean)value$; break;
    case 2: sString = (CharSequence)value$; break;
    default: throw new BaijiRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'sInt' field.
   */
  public Integer getSInt() {
    return sInt;
  }

  /**
   * Sets the value of the 'sInt' field.
   * @param value the value to set.
   */
  public void setSInt(Integer value) {
    this.sInt = value;
  }

  /**
   * Gets the value of the 'sBoolean' field.
   */
  public Boolean getSBoolean() {
    return sBoolean;
  }

  /**
   * Sets the value of the 'sBoolean' field.
   * @param value the value to set.
   */
  public void setSBoolean(Boolean value) {
    this.sBoolean = value;
  }

  /**
   * Gets the value of the 'sString' field.
   */
  public CharSequence getSString() {
    return sString;
  }

  /**
   * Sets the value of the 'sString' field.
   * @param value the value to set.
   */
  public void setSString(CharSequence value) {
    this.sString = value;
  }
}
